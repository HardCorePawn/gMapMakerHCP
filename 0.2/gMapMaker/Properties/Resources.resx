<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationErrorText" xml:space="preserve">
    <value>Application failed to generate merged image and/or map.</value>
  </data>
  <data name="ApplicationErrorTitle" xml:space="preserve">
    <value>Application Error !</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="browser64" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\browser64.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ExceptionBadMapFile" xml:space="preserve">
    <value>Bad .map file ({0}).</value>
  </data>
  <data name="ExceptionCannotBuildBlankImage" xml:space="preserve">
    <value>Cannot build blank tile image.</value>
  </data>
  <data name="ExceptionCannotConvert24bpp" xml:space="preserve">
    <value>Cannot convert image to 24bpp.</value>
  </data>
  <data name="ExceptionCannotConvertGrayscale" xml:space="preserve">
    <value>Cannot convert image to grayscale.</value>
  </data>
  <data name="ExceptionCannotSaveFile" xml:space="preserve">
    <value>Cannot save file {0}.</value>
  </data>
  <data name="ExceptionConversion24bpp8bpp" xml:space="preserve">
    <value>Error while converting image from 24bpp to 8bpp. Image to bigger than available memory ?</value>
  </data>
  <data name="ExceptionDownloadingImage" xml:space="preserve">
    <value>Error while downloading image (Your IP may be blacklisted by Google).</value>
  </data>
  <data name="ExceptionGrayscalePalette" xml:space="preserve">
    <value>Error while initializing big image grayscale palette.</value>
  </data>
  <data name="ExceptionHashSizeNegative" xml:space="preserve">
    <value>Config file parameter MGMapsHashSize must be &gt; 0</value>
  </data>
  <data name="ExceptionImageMemoryAllocation" xml:space="preserve">
    <value>Error while allocating memory. Image too big.</value>
  </data>
  <data name="ExceptionLatLongIncorrect" xml:space="preserve">
    <value>Incorrect longitude/latitude. May be you have inverted top-left and bottom-right coordinates ?</value>
  </data>
  <data name="ExceptionLatLongOutside" xml:space="preserve">
    <value>Longitude and/or latitude outside valid bounds ([-179.9999,179.9999] for longitude, [-85.0511, 85.0511] for latitude).</value>
  </data>
  <data name="ExceptionLoadingImage" xml:space="preserve">
    <value>Error while loading {0}. Image file corrupted ?</value>
  </data>
  <data name="ExceptionNoProxyList" xml:space="preserve">
    <value>You must specify at least one proxy list URL.</value>
  </data>
  <data name="ExceptionNoProxyUrlFound" xml:space="preserve">
    <value>No proxy URL found in this page {0}.</value>
  </data>
  <data name="ExceptionPastingImage" xml:space="preserve">
    <value>Error while pasting image.</value>
  </data>
  <data name="ExceptionProxyListExhausted" xml:space="preserve">
    <value>Proxy list exhausted, none working.</value>
  </data>
  <data name="JpegWildcard" xml:space="preserve">
    <value>JPEG Image File (*.jpg;*.jpeg)|*.jpg;*.jpeg</value>
  </data>
  <data name="PngWildcard" xml:space="preserve">
    <value>PNG Image Files (*.png)|*.png</value>
  </data>
  <data name="TiffWildcard" xml:space="preserve">
    <value>TIFF Image Files (*.tif;*.tiff)|*.tif;*.tiff</value>
  </data>
</root>